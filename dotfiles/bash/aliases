# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

alias lsa="ls -laGh"

alias reload="source ~/bin/dotfiles/bash/aliases"
alias reloadall="source ~/.bashrc"
alias ea="subl ~/bin/dotfiles/bash/aliases && reload"
alias nn="subl -n"
alias dbdevdir="cd ~/Dropbox/dev"
alias ppdev="cd ~/Dropbox/dev/PayPalBanking"
alias blog="cd ~/Dropbox/octopress"
alias fm="cd ~/Dropbox/dev/FeverMonitor"
alias f='open -a Finder ./'
alias devdir="cd ~/Library/Developer/Projects/iOS"
alias tansler="cd ~/Library/Developer/Projects/iOS/tansler-ios"
alias sc="cd ~/Library/Developer/Projects/iOS/SalesCoach"
alias gbt="cd ~/Library/Developer/Projects/iOS/GetBetter"
alias comms="cd ~/dev/credit-ops-communication-services"
alias roles="cd ~/dev/credit-ops-role-services"
alias ax="chmod a+x"
alias ij="open -a /Applications/IntelliJ\ IDEA\ 11.app/Contents/MacOS/idea"

# Quick way to rebuild the Launch Services database and get rid
# of duplicates in the Open With submenu.
alias fixopenwith='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user'

function take(){
	mkdir $1
	cd $1
}

function selected(){
	osascript -e 	'tell application "finder"
						set tf to selection
						set tl to ""
						repeat with f in tf
							set tl to tl & "\"" & POSIX path of (f as alias) & "\" "
						end repeat
					end tell'
}

# cd to the path of the front Finder window
cdf() {
	target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
	if [ "$target" != "" ]; then
		cd "$target"; pwd
	else
		echo 'No Finder window found' >&2
	fi
}

# ls better
alias la="ls -aF"
alias ld="ls -ld"
alias ll="ls -l"
alias lal="ls -al"
alias lt='ls -At1 && echo "------Oldest--"'
alias ltr='ls -Art1 && echo "------Newest--"'

## GIT
function gg(){
	git commit -v -a -m "$*"
}

alias gs="git status"
alias gsb="git status -sb"
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias go='git checkout '
alias gk='gitk --all&'
alias gx='gitx --all'
alias gpm="git push origin master"
# Remove git from a project
alias ungit="find . -name '.git' -exec rm -rf {} \;"

alias got='git '
alias get='git '

# Commit to git and log to Day One
function gca(){
  msg=$*
  path=$(pwd)
  ~/Scripts/LogtoDayOne.rb "@${path##*/} $msg"
  git commit -am "$msg"
}

## Open current XCode workspace
function xc(){
	result=${PWD##*/}
	# result=${PWD}
	# printf '%s\n' "$result"
	workspace="$result.xcworkspace"

	if [ -d $workspace ]; then
		open "$workspace"
		# $echo "Opening $workspace"
	fi
}

# List contents of a zip archive
# ls archives (inspired by `extract`)
lsz() {
	if [ $# -ne 1 ]
	then
		echo "lsz filename.[tar,tgz,gz,zip,etc]"
		return 1
	fi
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2|*.tar.gz|*.tar|*.tbz2|*.tgz) tar tvf $1;;
			*.zip)  unzip -l $1;;
			*)      echo "'$1' unrecognized." ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

function wopen { # via https://gist.github.com/coryalder/5609996
  WORKSPACE="${PWD##*/}.xcworkspace"
  PROJECT="${PWD##*/}.xcodeproj"
  if [ -a $WORKSPACE ]; then
    open $WORKSPACE;
  elif [ -a $PROJECT ]; then
    open $PROJECT;
  else
    echo "No workspace or project found.";
  fi
} # open Xcode workspace/project of same name as current directory.

# Fix Finder 'Open With' duplicates
alias fixow='/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain user;killall Finder;echo "Open With has been rebuilt, Finder will relaunch"'

# List pretty version of PATH
function path(){
    old=$IFS
    IFS=:
    printf "%s\n" $PATH
    IFS=$old
}

# Recursively Delete cached Maven dependencies
function purgemvn(){
	rm -rf ~/.m2/repository/
}
